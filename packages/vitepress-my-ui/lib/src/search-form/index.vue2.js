"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const l=require("vue"),d=require("../rc-form/index.vue.js"),m=require("../utils/utils.js"),h=l.defineComponent({name:"SearchForm",emits:["onSearchSubmit","onDialogShow","custDialog","firstSearch","onReset","update:modelValue"],props:{modelValue:{type:Object,default:()=>({})},formList:{type:Array,default:()=>[]},staticData:{type:Object,default:()=>({})},labelWidth:{type:String,default:"100px"},initValue:{type:Object,default:()=>({})},defaultValue:{type:Object,default:()=>({})},rowNumber:{type:Number,default:3},toolsListDisabled:{type:Boolean,default:!1},show:{type:Boolean,default:!1},maxHeight:{type:[String,Number],default:"400"}},setup(o,{emit:a}){let t=l.reactive({form:{},show:o.show,RCFormRef:l.ref(null)});const n=()=>{t.RCFormRef.submit().then(e=>{t.show=!1,a("onSearchSubmit",e)}).catch(e=>{console.log(e)})};t.form=l.computed({get:()=>o.modelValue,set:e=>a("update:modelValue",e)});const s=()=>{console.log("onReset",o.defaultValue);const e=o.defaultValue?m.deepClone(o.defaultValue):{};t.form=e,a("onReset")},i=e=>{e||e===!1?t.show=e:t.show=!t.show};l.onMounted(async()=>{const e={...t.form,...o.initValue,...o.defaultValue};t.form=e});const r=(e,u={})=>{a("onDialogShow",e,u)},c=(e,u)=>{a("custDialog",e,u)},f=l.computed(()=>o.formList.filter(e=>e.isShow).length<o.rowNumber);return{...l.toRefs(t),onSearchSubmit:n,onReset:s,onDialogShow:r,custDialog:c,changeShow:i,hasShow:f}},components:{RCForm:d.default,ToolsList:l.defineAsyncComponent(()=>Promise.resolve().then(()=>require("../tools-list/index.vue.js")))}});exports.default=h;
